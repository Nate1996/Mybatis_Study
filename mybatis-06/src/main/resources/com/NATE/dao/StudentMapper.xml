<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.NATE.dao.StudentMapper">

    <!-- 按查询嵌套处理
           思路：
            1.查询所有的学生信息
            2.根据查询出来的学生tid，寻找对应的老师
     -->
    <select id="getStudent" resultMap="StudentTeacher">
        select * from student
    </select>
    <resultMap id="StudentTeacher" type="Student">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <!-- 复杂的属性，需要单独处理
             对象：association
             集合：collection
        -->
        <association property="teacher" column="tid" javaType="Teacher" select="getTeacher"/>
    </resultMap>
    <!--
        这里传递过来的id，只有一个属性的时候，下面可以写任何值
        association中column多参数配置：column="{key=value,key=value}"
      其实就是键值对的形式，key是传给下个sql的取值名称，value是片段一中sql查询的字段名
  -->
    <select id="getTeacher" resultType="Teacher">
        select * from teacher where id = #{tid}
    </select>

<!--=======================================================================================================-->


<!--
     按照结果嵌套处理
-->
    <select id="getStudent2" resultMap="StudentTeacher2">
        select s.id sid, s.name sname, t.name tname from student s, teacher t
        where s.tid = t.id;
    </select>

    <resultMap id="StudentTeacher2" type="Student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>
        <association property="teacher" javaType="Teacher">
            <result property="name" column="tname"/>
        </association>
    </resultMap>



</mapper>